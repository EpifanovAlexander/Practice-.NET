@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model WorkWithASP.Models.UsersModel
@using WorkWithASP.Services;
@{ 
    InMemoryStorage memoryStorage = new InMemoryStorage();
}


@if (Model == null)
{
    ViewData["Title"] = "Add";
    <h1>Add User</h1>
    <hr />

    <div class="row">
        <div class="col-md-4">

            <form asp-action="Add">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Birthdate" class="control-label"></label>
                    <input type="date" asp-for="Birthdate" class="form-control" />
                    <span asp-validation-for="Birthdate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Rewards" class="control-label">All Rewards</label>
                    <label asp-for="Rewards" class="control-label" style="color: gray">(just choose rewards)</label>

                    <div class="form-group" style="overflow-y: scroll; height: 150px">
                        <table class="table table-hover table-bordered" asp-for="Rewards">
                            <tbody>
                                @foreach (RewardsModel reward in memoryStorage.GetRewardsList())
                                {
                                    <tr>
                                        <td>
                                            <span>@Html.DisplayFor(modelItem => reward.Title)</span>
                                        </td>
                                        <td>
                                            <span>@Html.CheckBoxFor(m => m.RewardsIsCheck[reward.Id])</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>

                <div class="form-group">
                    <input type="submit" value="Add User" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}



else
{
    ViewData["Title"] = "Edit";
    <h1>Edit User</h1>

    <div class="row">
        <div class="col-md-4">

            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Birthdate" class="control-label"></label>
                    <input type="date" asp-for="Birthdate" class="form-control" />
                    <span asp-validation-for="Birthdate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Rewards" class="control-label">All Rewards</label>
                    <label asp-for="Rewards" class="control-label" style="color: gray">(just choose rewards)</label>

                    <div class="form-group" style="overflow-y: scroll; height: 150px">
                        <table class="table table-hover table-bordered" asp-for="Rewards">
                            <tbody>
                                @foreach (RewardsModel reward in memoryStorage.GetRewardsList())
                                {
                                    <tr>
                                        <td>
                                            <span>@Html.DisplayFor(modelItem => reward.Title)</span>
                                        </td>
                                        <td>
                                            <span>@Html.CheckBoxFor(m => m.RewardsIsCheck[reward.Id])</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="form-group">
                    <div class="btn-group dropright">
                        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            View User Rewards
                        </button>
                        <div asp-for="Rewards" class="dropdown-menu">
                            @if (Model.Rewards != null)
                                @foreach (var reward in Model.Rewards)
                                {
                                    <a class="dropdown-item"> @reward.Title </a>
                                }
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <input name="action" type="submit" value="Edit User" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}


<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
